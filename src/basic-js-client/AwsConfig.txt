First create and IAM  Identity Provider 
    https://console.aws.amazon.com/iam/home
    use the provider as
            https://dev-oauth1.azurewebsites.net/oauth/ls

    use the client name as 
            implictclient 

Second create a role, 
  Role name = OpeniD-dev-oauth1
  Select a Role Type = 
        Select "Role for Identity Provider Access"
        Select "Grant access to web identity provider"
            From the dropdown, select the identity provider - https://dev-oauth1.azurewebsites.net/oauth/ls

Verify Role Trust 

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Principal": {
        "Federated": "arn:aws:iam::994367406372:oidc-provider/dev-oauth1.azurewebsites.net/oauth/ls"
      },
      "Condition": {
        "StringEquals": {
          "dev-oauth1.azurewebsites.net/oauth/ls:aud": "implicitclient"
        }
      }
    }
  ]
}


No policy choosen .. 



Some details 

http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html?icmpid=docs_iam_console



###################################################################################

https://console.aws.amazon.com/cognito/create/

Create a new Identity Pool 

name = dev_oauth1_identitypool

Choose Open id 
    select dev-oauth1.azurewebsites.net/oauth/ls


// Initialize the Amazon Cognito credentials provider
AWS.config.region = 'us-east-1'; // Region
AWS.config.credentials = new AWS.CognitoIdentityCredentials({
    IdentityPoolId: 'us-east-1:ef63ca9f-0b34-4649-9505-a524b8f7a585',
});


// Initialize the Cognito Sync client

AWS.config.credentials.get(function(){

   var syncClient = new AWS.CognitoSyncManager();

   syncClient.openOrCreateDataset('myDataset', function(err, dataset) {

      dataset.put('myKey', 'myValue', function(err, record){

         dataset.synchronize({

            onSuccess: function(data, newRecords) {
                // Your handler code here
            }

         });

      });

   });

});

https://github.com/aws/aws-sdk-js/releases


http://docs.aws.amazon.com/AWSJavaScriptSDK/guide/browser-intro.html


http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html


